/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.0.2/userguide/tutorial_java_projects.html
 */

plugins {
    id 'java'
}

repositories {
    mavenCentral()
}

ext {
    javaSDKVersion = '1.18.1'
}


dependencies {
    // These dependencies are used by the application.
    implementation "io.temporal:temporal-sdk:$javaSDKVersion"
    implementation "ch.qos.logback:logback-classic:1.2.11"

    implementation('org.apache.spark:spark-core_2.12:3.2.1') {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
    implementation 'org.apache.spark:spark-sql_2.12:3.2.1'
// Apache Spark Streaming for stream processing
    implementation 'org.apache.spark:spark-streaming_2.12:3.2.1'
    // Spark Streaming Kafka integration
    implementation 'org.apache.spark:spark-streaming-kafka-0-10_2.12:3.2.1'

    // Optionally, add Apache Kafka Clients if you need specific Kafka functionalities
    implementation 'org.apache.kafka:kafka-clients:2.8.0'
    // Use JUnit test framework
    testImplementation "io.temporal:temporal-testing:$javaSDKVersion"
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:5.1.1"
}


task initiatePipeline(type: JavaExec) {
    mainClass = 'streamprocessingapp.ProcessStreams'
    classpath = sourceSets.main.runtimeClasspath
}

task startWorker(type: JavaExec) {
    mainClass = 'streamprocessingapp.StreamProcessingWorker'
    classpath = sourceSets.main.runtimeClasspath
}
